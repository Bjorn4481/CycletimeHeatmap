# FRC Robot Cycle Time Heatmap Generator

I need you to create a Python program for an FRC (FIRST Robotics Competition) project that generates a heatmap showing the time it takes a robot to reach each square in a grid from its starting position.

## Project Requirements:

### Grid System:
- Create a 10x10 grid system
- Each grid cell can have one of 3 statuses:
  1. **Free** - Robot can travel through this cell
  2. **Blocked** - Robot cannot travel through this cell (obstacle)
  3. **Robot** - Current robot position (starting point)

### Core Functionality:
- Calculate the shortest path from the robot's position to every other free cell in the grid
- Account for blocked cells - the robot must navigate around them, increasing travel time
- Generate a visual heatmap showing cycle times to reach each cell
- Use pathfinding algorithms (like A* or Dijkstra) to find optimal routes around obstacles

### Implementation Phases:

#### Phase 1 - Simple Proof of Concept:
First, create a very simple working example to prove the concept works:
- Hard-code a basic 10x10 grid with a few blocked cells
- Place the robot at a fixed position (e.g., center of grid)
- Calculate and display travel times to a few key positions
- Show a basic text-based or simple matplotlib visualization
- Use Manhattan distance as a starting approximation

#### Phase 2 - Full Implementation:
After the proof of concept works, expand to the full solution:
- Interactive grid setup (allow user to click/mark blocked cells)
- Configurable robot starting position
- Full pathfinding algorithm implementation
- Professional heatmap visualization with color coding
- Export capabilities (save heatmap as image)
- Performance optimization for larger grids

### Technical Specifications:
- **Language**: Python (mandatory)
- **Libraries**: Use appropriate libraries like:
  - `numpy` for grid operations
  - `matplotlib` or `seaborn` for heatmap visualization
  - `tkinter` or similar for interactive grid setup (Phase 2)
- **Pathfinding**: Implement proper pathfinding considering blocked cells
- **Distance Calculation**: Account for actual path length, not straight-line distance

### Expected Output:
- A visual heatmap where:
  - Colors represent time/distance to reach each cell
  - Blocked cells are clearly marked (e.g., black)
  - Robot position is highlighted
  - Legend shows time scale
  - Grid coordinates are labeled

### Code Structure:
Please organize the code with:
- Grid class to manage the 10x10 grid and cell states
- Pathfinding module for route calculation
- Visualization module for heatmap generation
- Main script to tie everything together
- Clear documentation and comments

Start with Phase 1 to get a working proof of concept, then we can expand to the full implementation. Make sure the initial version is simple but demonstrates that the core pathfinding and heatmap generation works correctly.